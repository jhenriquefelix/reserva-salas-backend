// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservaSalas.Infraestrutura.Persistencia;

#nullable disable

namespace ReservaSalas.Infraestrutura.Migrations
{
    [DbContext(typeof(ReservaSalasDbContext))]
    partial class ReservaSalasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.19");

            modelBuilder.Entity("ReservaSalas.Dominio.Entidades.Local", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Locais", (string)null);
                });

            modelBuilder.Entity("ReservaSalas.Dominio.Entidades.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Cafe")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CafeDescricao")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CafeQuantidade")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponsavelEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponsavelNome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<Guid>("SalaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("SalaId", "Fim");

                    b.HasIndex("SalaId", "Inicio");

                    b.ToTable("Reservas", null, t =>
                        {
                            t.HasCheckConstraint("CK_Reservas_InicioMenorQueFim", "Inicio < Fim");
                        });
                });

            modelBuilder.Entity("ReservaSalas.Dominio.Entidades.Sala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Capacidade")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("LocalId", "Nome")
                        .IsUnique();

                    b.ToTable("Salas", null, t =>
                        {
                            t.HasCheckConstraint("CK_Salas_Capacidade_NaoNegativa", "Capacidade >= 0");
                        });
                });

            modelBuilder.Entity("ReservaSalas.Dominio.Entidades.Reserva", b =>
                {
                    b.HasOne("ReservaSalas.Dominio.Entidades.Local", "Local")
                        .WithMany()
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReservaSalas.Dominio.Entidades.Sala", "Sala")
                        .WithMany("Reservas")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("ReservaSalas.Dominio.Entidades.Sala", b =>
                {
                    b.HasOne("ReservaSalas.Dominio.Entidades.Local", "Local")
                        .WithMany("Salas")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("ReservaSalas.Dominio.Entidades.Local", b =>
                {
                    b.Navigation("Salas");
                });

            modelBuilder.Entity("ReservaSalas.Dominio.Entidades.Sala", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
